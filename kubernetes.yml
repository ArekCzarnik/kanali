---

apiVersion: v1
kind: Service
metadata:
  name: kanali
  namespace: default
spec:
  selector:
    k8s-app: kanali
  ports:
  - name: app-port
    port: 8443
  type: NodePort

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kanali
  namespace: default
spec:
  selector:
    matchLabels:
      k8s-app: kanali
  template:
    metadata:
      labels:
        k8s-app: kanali
    spec:
      serviceAccountName: kanali
      containers:
      - name: kanali
        imagePullPolicy: IfNotPresent
        image: northwesternmutual/kanali:v1.0.0
        args:
        - start
        - --kanali-port=8443
        - --status-port=8080
        - --bind-address=0.0.0.0
        - --log-level=info
        - --enable-mock
        - --enable-cluster-ip
        - --tls-cert-file=/etc/pki/tls.crt
        - --tls-private-key-file=/etc/pki/tls.key
        - --decryption-key-file=/etc/kanali/key.pem
        - --plugins-location=/
        livenessProbe:
          httpGet:
            path: /liveness
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 15
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            cpu: "50m"
        ports:
        - containerPort: 8443
        - containerPort: 8080
        volumeMounts:
        - name: pki
          mountPath: /etc/pki
        - name: decrypt-key
          mountPath: /etc/kanali
      volumes:
      - name: pki
        secret:
          secretName: kanali
      - name: decrypt-key
        secret:
          secretName: kanali-key-decription

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: kanali
  namespace: default
data:
  config.json: |-
    {
      "headers": {
          "x-nm-deployment": "stable"
      }
    }

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: kanali
  namespace: default
spec:
  maxReplicas: 8
  minReplicas: 2
  scaleTargetRef:
    apiVersion: v1
    kind: Deployment
    name: kanali
  targetCPUUtilizationPercentage: 500

---

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kanali
  name: kanali
  namespace: default

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: kanali
rules:
  - apiGroups: ["kanali.io"]
    resources: ["apikeies", "apiproxies", "apikeybindings"]
    verbs: ["watch"]
  - apiGroups: ["extensions"]
    resources: ["thirdpartyresources"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["services", "secrets", "endpoints"]
    verbs: ["watch"]
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["list"]

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kanali
  labels:
    app: kanali
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kanali
subjects:
- kind: ServiceAccount
  name: kanali
  namespace: default
